/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF 0
#define NUM 1
#define MSK 2
#define MSC 3

#define U_MOUSE_MOVE_MAX 2900
#define MOU_U MOVE_Y(-U_MOUSE_MOVE_MAX)
#define MOU_D MOVE_Y(U_MOUSE_MOVE_MAX)
#define MOU_L MOVE_X(-U_MOUSE_MOVE_MAX)
#define MOU_R MOVE_X(U_MOUSE_MOVE_MAX)
&mmv {
  time-to-max-speed-ms = <700>;
};

#define U_MOUSE_SCROLL_MAX 20
#define SCL_U MOVE_Y(U_MOUSE_SCROLL_MAX)
#define SCL_D MOVE_Y(-U_MOUSE_SCROLL_MAX)
#define SCL_L MOVE_X(-U_MOUSE_SCROLL_MAX)
#define SCL_R MOVE_X(U_MOUSE_SCROLL_MAX)
&msc {
  time-to-max-speed-ms = <400>;
};

/ {
        behaviors {
                tb0_mmv: behavior_input_config_tb0_move {
                        compatible = "zmk,behavior-input-config";
                        #input-config-binding-cells = <0>; 
                        device = <&pd0>;
			evt-type = <INPUT_EV_REL>;
			x-input-code = <INPUT_REL_X>;
			y-input-code = <INPUT_REL_Y>;
			scale-multiplier = <1>;
			scale-divisor = <1>;
                };
                tb0_msl: behavior_input_config_tb0_scroll {
                        compatible = "zmk,behavior-input-config";
                        #input-config-binding-cells = <0>; 
                        device = <&pd0>;
			evt-type = <INPUT_EV_REL>;
			x-input-code = <INPUT_REL_MISC>;
			y-input-code = <INPUT_REL_WHEEL>;
			scale-multiplier = <1>;
			scale-divisor = <4>;
                        y-invert;
                };

                tb1_mmv: behavior_input_config_tb1_move {
                        compatible = "zmk,behavior-input-config";
                        #input-config-binding-cells = <0>; 
                        device = <&pd1>;
			evt-type = <INPUT_EV_REL>;
			x-input-code = <INPUT_REL_X>;
			y-input-code = <INPUT_REL_Y>;
			scale-multiplier = <1>;
			scale-divisor = <1>;
                };
                tb1_msl: behavior_input_config_tb1_scroll {
                        compatible = "zmk,behavior-input-config";
                        #input-config-binding-cells = <0>; 
                        device = <&pd1>;
			evt-type = <INPUT_EV_REL>;
			x-input-code = <INPUT_REL_MISC>;
			y-input-code = <INPUT_REL_WHEEL>;
			scale-multiplier = <1>;
			scale-divisor = <4>;
                        y-invert;
                };

                // lar0_haptic: behavior_output_config_lar0_haptic {
                //         compatible = "zmk,behavior-output-config";
                //         #output-config-binding-cells = <0>; 
                //         device = <&lra0>;
                //         source = "layer-state-change";
                //         // source = "position-state-change";
                //         // source = "keycode-state-change";
                //         // source = "mouse-button-state-change";
                //         // source = "transport";
                // };

                // lar0_hid: behavior_output_config_lar0_transport {
                //         compatible = "zmk,behavior-output-config";
                //         #output-config-binding-cells = <0>; 
                //         device = <&lra0>;
                //         source = "transport";
                // };

                // sdl: set_default_layer {
                //         compatible = "zmk,behavior-set-default-layer";
                //         #binding-cells = <1>;
                // };
                // tempo: key_tempo {
                //         compatible = "zmk,behavior-key-tempo";
                //         #binding-cells = <0>;
                //         // usage-pages = <HID_USAGE_KEY>;
                //         usage-pages = <HID_USAGE_KEY HID_USAGE_CONSUMER>;
                // };
        };

        keymap {
                compatible = "zmk,keymap";
                DEF_layer {
// +------------------------------------------------------+     +--------------------------------------------------------+
// |     Q    |     W    |     E    |     R    |     T    |     |     Y     |     U    |    I      |     O    |     P    |
// |     A    |     S    |     D    |     F    |     G    |     |     H     |     J    |    K      |     L    |   GUI ;: |
// |  SHFT Z  |     X    |     C    |     V    |     B    |     |     N     |     M    |   ALT ,<  |  CTRL .> |  SHFT /? |
//                       | _MSK:ESC |    GUI   | CTRL:TAB |     |  ALT:ENT  | _LWR:SPC | _MSK:BKSP |
                        bindings = <
   &kp Q        &kp W  &kp E          &kp R     &kp T             &kp Y         &kp U          &kp I           &kp O          &kp P
   &kp A        &kp S  &kp D          &kp F     &kp G             &kp H         &kp J          &kp K           &kp L          &mt LGUI SEMI
   &mt LSHFT Z  &kp X  &kp C          &kp V     &kp B             &kp N         &kp M          &mt RALT COMMA  &mt RCTRL DOT  &mt RSHFT FSLH
                       &lt MSK ESC    &kp LGUI  &mt LCTRL TAB     &mt LALT RET  &lt NUM SPACE  &lt MSK BKSP
                        >;
                        input-config-bindings = <&tb0_mmv &tb1_mmv>;
                        // output-config-bindings = <&lar0_haptic &lar0_hid>;
                        // sensor-bindings = <&xy_mm>;
                        // sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
                };
                NUM_layer {
// +------------------------------------------------------+     +-------------------------------------------------------+
// | LALT 1!  | LCTRL 2@  |    3#    |    4$    |    5%   |     |    6^    |    7&    |    8&    |  RCTRL 9( |  RALT 0) |
// | LGUI `~  |    ESC    |    {[    |    ]}    |   TAB   |     |    LFT   |   DWN    |    UP    |    RGT    |  RGUI '" |
// | SHFT TAB |           |          |          |   RET   |     |   BKSP   |    -_    |    =+    |    SPC    |  SHFT \| |
//                        |          |          |         |     |   ^MSK   |    (H)   |          |
                        bindings = <
   &mt LALT N1     &mt LCTRL N2  &kp N3    &kp N4     &kp N5        &kp N6    &kp N7     &kp N8     &mt RCTRL N9  &mt RALT N0
   &mt LGUI GRAVE  &kp ESC       &kp LBKT  &kp RBKT   &kp TAB       &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT     &mt RGUI SQT
   &mt LSHFT TAB   &trans        &trans    &trans     &kp RET       &kp BKSP  &kp MINUS  &kp EQUAL  &kp SPACE     &mt RSHFT BSLH
                                 &trans    &trans     &trans        &tog MSK  &trans     &trans
                        >;
                        input-config-bindings = <&tb0_mmv &tb1_mmv>;
                        // output-config-bindings = <&lar0_haptic &lar0_hid>;
                };
                MSK_layer {
// +------------------------------------------------------+     +------------------------------------------------------+
// |    F1    |    F2    |    F3    |    F4    |    F5    |     |    F6    |    F7    |    F8    |    F9    |   F10    |
// |          |   VOLD   |   VOLU   |   BRID   |   BRIU   |     |   MLFT   |   MDWN   |    MUP   |   MRGT   | _MSC:F11 |
// |          |   RCLK   |   MCLK   |   LCLK   |          |     |          |   LCLK   |   MCLK   |   RCLK   |   F12    |
//                       |          |          |          |     |   ^MSK   |          |          |
                        bindings = <
   &kp F1  &kp F2        &kp F3        &kp F4        &kp F5            &kp F6      &kp F7      &kp F8      &kp F9      &kp F10
   &trans  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_DN  &kp C_BRI_UP      &mmv MOU_L  &mmv MOU_D  &mmv MOU_U  &mmv MOU_R  &lt MSC F11
   &trans  &mkp RCLK     &mkp MCLK     &mkp LCLK     &trans            &trans      &mkp LCLK   &mkp MCLK   &mkp RCLK   &kp F12
                         &trans        &trans        &bt BT_CLR        &tog MSK    &trans      &trans
                        >;
                        input-config-bindings = <&tb0_mmv &tb1_mmv>;
                        // output-config-bindings = <&lar0_haptic &lar0_hid>;
                };
                MSC_layer {

// +----------------------------------------------------+     +------------------------------------------------------+
// |         |         |   BT_0   |   BT_1   |   BT_C   |     |          |          |          |          |          |
// |         |         |          |          |          |     |   SLFT   |   SDWN   |    SUP   |   SRGT   |          |
// |         |         |          |          |          |     |          |          |          |          |          |
//                     |          |          |          |     |          |          |          |
                        bindings = <
   &trans    &trans     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_CLR       &trans      &trans      &trans      &trans      &trans
   &trans    &trans     &trans        &trans        &trans           &msc SCL_L  &msc SCL_D  &msc SCL_U  &msc SCL_R  &trans
   &trans    &trans     &trans        &trans        &trans           &trans      &trans      &trans      &trans      &trans
                        &trans        &trans        &trans           &trans      &trans      &tog MSK
                        >;
                        input-config-bindings = <&tb0_msl &tb1_msl>;
                        // output-config-bindings = <&lar0_haptic &lar0_hid>;
                };
       };
};
