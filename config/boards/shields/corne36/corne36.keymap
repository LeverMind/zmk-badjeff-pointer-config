/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <behaviors/mouse_keys.dtsi>
#include <behaviors/mouse_key_toggle.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define DEF 0
#define NUM 1
#define MSK 2
#define MSC 3

#define U_MOUSE_MOVE_MAX 1700
#define MOU_U MOVE_Y(-U_MOUSE_MOVE_MAX)
#define MOU_D MOVE_Y(U_MOUSE_MOVE_MAX)
#define MOU_L MOVE_X(-U_MOUSE_MOVE_MAX)
#define MOU_R MOVE_X(U_MOUSE_MOVE_MAX)

#define U_MOUSE_SCROLL_MAX 20
#define SCL_U MOVE_Y(U_MOUSE_SCROLL_MAX)
#define SCL_D MOVE_Y(-U_MOUSE_SCROLL_MAX)
#define SCL_L MOVE_X(-U_MOUSE_SCROLL_MAX)
#define SCL_R MOVE_X(U_MOUSE_SCROLL_MAX)

/ {
        tb0_mmv_ibl {
                compatible = "zmk,input-behavior-listener";
                device = <&pd0>;
                layers = <DEF NUM MSK>;
		evt-type = <INPUT_EV_REL>;
		x-input-code = <INPUT_REL_X>;
		y-input-code = <INPUT_REL_Y>;
		scale-multiplier = <1>;
		scale-divisor = <1>;
                // bindings = <&ib_tog_layer MSK>;
        };
        tb0_msl_ibl {
                compatible = "zmk,input-behavior-listener";
                device = <&pd0>;
                layers = <MSC>;
                evt-type = <INPUT_EV_REL>;
                x-input-code = <INPUT_REL_MISC>;
                y-input-code = <INPUT_REL_WHEEL>;
                scale-multiplier = <1>;
                scale-divisor = <12>;
                y-invert;
        };

        tb1_mmv_ibl {
                compatible = "zmk,input-behavior-listener";
                device = <&pd1>;
                layers = <DEF NUM MSK>;
		evt-type = <INPUT_EV_REL>;
		x-input-code = <INPUT_REL_X>;
		y-input-code = <INPUT_REL_Y>;
		scale-multiplier = <1>;
		scale-divisor = <1>;
                // bindings = <&ib_tog_layer MSK>;
        };
        tb1_msl_ibl {
                compatible = "zmk,input-behavior-listener";
                device = <&pd1>;
                layers = <MSC>;
                evt-type = <INPUT_EV_REL>;
                x-input-code = <INPUT_REL_MISC>;
                y-input-code = <INPUT_REL_WHEEL>;
                scale-multiplier = <1>;
                scale-divisor = <12>;
                y-invert;
        };

        tb2_mmv_ibl {
                compatible = "zmk,input-behavior-listener";
                device = <&pd2>;
                layers = <DEF NUM MSK>;
		evt-type = <INPUT_EV_REL>;
		x-input-code = <INPUT_REL_X>;
		y-input-code = <INPUT_REL_Y>;
		scale-multiplier = <1>;
		scale-divisor = <1>;
                // bindings = <&ib_tog_layer MSK>;
        };
        tb2_msl_ibl {
                compatible = "zmk,input-behavior-listener";
                device = <&pd2>;
                layers = <MSC>;
                evt-type = <INPUT_EV_REL>;
                x-input-code = <INPUT_REL_MISC>;
                y-input-code = <INPUT_REL_WHEEL>;
                scale-multiplier = <1>;
                scale-divisor = <12>;
                y-invert;
        };

        // ib_tog_layer: ib_tog_layer {
        //         compatible = "zmk,input-behavior-tog-layer";
        //         #binding-cells = <1>;
        //         time-to-live-ms = <1000>;
        // };

        //   0   1   2   3   4     5   6   7   8   9
        //  10  11  12  13  14    15  16  17  18  19
        //  20  21  22  23  24    25  26  27  28  29
        //          30  31  32    33  34  35
        //  36 37 38
        combos {
                compatible = "zmk,combos";

                q   { timeout-ms = <70>; key-positions = <1 2>; bindings = <&kp Q>; layers = <DEF>; };
                t   { timeout-ms = <70>; key-positions = <2 3>; bindings = <&kp T>; layers = <DEF>; };
                g   { timeout-ms = <60>; key-positions = <12 13>; bindings = <&kp G>; layers = <DEF>; };
                b_d { timeout-ms = <70>; key-positions = <2 13>; bindings = <&kp B>; layers = <DEF>; };
                t_v { timeout-ms = <60>; key-positions = <3 13>; bindings = <&kp T>; layers = <DEF>; };

                z   { timeout-ms = <30>; key-positions = <10 31>; bindings = <&kp Z>; layers = <DEF>; };
                x   { timeout-ms = <30>; key-positions = <11 31>; bindings = <&kp X>; layers = <DEF>; };
                c   { timeout-ms = <30>; key-positions = <12 31>; bindings = <&kp C>; layers = <DEF>; };
                v   { timeout-ms = <30>; key-positions = <13 31>; bindings = <&kp V>; layers = <DEF>; };
                b   { timeout-ms = <30>; key-positions = <13 32>; bindings = <&kp B>; layers = <DEF>; };

                p   { timeout-ms = <70>; key-positions = <7 8>; bindings = <&kp P>; layers = <DEF>; };
                y   { timeout-ms = <70>; key-positions = <6 7>; bindings = <&kp Y>; layers = <DEF>; };
                h   { timeout-ms = <60>; key-positions = <16 17>; bindings = <&kp H>; layers = <DEF>; };
                n_d { timeout-ms = <70>; key-positions = <7 16>; bindings = <&kp N>; layers = <DEF>; };
                y_v { timeout-ms = <60>; key-positions = <6 16>; bindings = <&kp Y>; layers = <DEF>; };

                n     { timeout-ms = <30>; key-positions = <16 33>; bindings = <&kp N>; layers = <DEF>; };
                m     { timeout-ms = <30>; key-positions = <16 34>; bindings = <&kp M>; layers = <DEF>; };
                comma { timeout-ms = <30>; key-positions = <17 34>; bindings = <&kp COMMA>; layers = <DEF>; };
                dot   { timeout-ms = <30>; key-positions = <18 34>; bindings = <&kp DOT>; layers = <DEF>; };
                flash { timeout-ms = <30>; key-positions = <19 34>; bindings = <&kp FSLH>; layers = <DEF>; };

                bksp { timeout-ms = <50>; key-positions = <17 18>; bindings = <&kp BKSP>; layers = <DEF>; };
                tab  { timeout-ms = <50>; key-positions = <11 12>; bindings = <&kp TAB>; layers = <DEF>; };

                nav_left { timeout-ms = <80>; key-positions = <16 17>; bindings = <&kp LEFT>; layers = <NUM>; };
                mmv_left { timeout-ms = <80>; key-positions = <16 17>; bindings = <&mmv MOU_L>; layers = <MSK>; };
                msc_left { timeout-ms = <80>; key-positions = <16 17>; bindings = <&msc SCL_L>; layers = <MSC>; };
        };

        behaviors {
                hm_l: homerow_mods_left {
                        compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>;
                        tapping-term-ms = <200>; quick-tap-ms = <200>;
                        flavor = "tap-preferred"; bindings = <&kp>, <&kp>;
                };
                hm_r: homerow_mods_right {
                        compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>;
                        tapping-term-ms = <200>; quick-tap-ms = <200>;
                        flavor = "tap-preferred"; bindings = <&kp>, <&kp>;
                };
                hl_l: homerow_layers_left {
                        compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>;
                        tapping-term-ms = <200>; quick-tap-ms = <200>;
                        flavor = "tap-preferred"; bindings = <&mo>, <&kp>;
                };
                hl_r: homerow_layers_right {
                        compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>;
                        tapping-term-ms = <200>; quick-tap-ms = <200>;
                        flavor = "tap-preferred"; bindings = <&mo>, <&kp>;
                };
        };

        tempo: key_tempo {
                compatible = "zmk,behavior-key-tempo";
                #binding-cells = <0>;
                usage-pages = <HID_USAGE_KEY HID_USAGE_CONSUMER>;
        };

        keymap {
                compatible = "zmk,keymap";
                DEF_layer {
// +------------------------------------------------------+     +--------------------------------------------------------+
// |     Q    |  LCTRL:W |  _MSK:E  |  LALT:R  |     T    |     |     Y     |  RALT:U  |  _MSK:I   |  RCTRL:O |     P    |
// |  SHFT A  |  _NUM:S  |  _NUM:D  |  LGUI:F  |     G    |     |     H     |  RGUI:J  |  _NUM:K   |  _NUM:L  |  SHFT ;: |
// |  SHFT Z  |     X    |     C    |     V    |     B    |     |     N     |     M    |    ,<     |    .>    |  SHFT /? |
//                       | ^MSK:ESC |  GUI:ESC | CTRL:TAB |     |  ALT:ENT  | _NUM:SPC | ^MSK:BKSP |
                        bindings = <
   &kp Q          &hm_l LCTRL W   &hl_l MSK E    &hm_l LALT R    &kp T               &kp Y           &hm_r RALT U     &hl_r MSK I     &hm_r RCTRL O  &kp P
   &mt LSHFT A    &hl_l NUM S     &hl_l NUM D    &hm_l LGUI F    &kp G               &kp H           &hm_r RGUI J     &hl_r NUM K     &hl_r NUM L    &mt RSHFT SEMI
   &mt LSHFT Z    &kp X           &kp C          &kp V           &kp B               &kp N           &kp M            &kp COMMA       &kp DOT        &mt RSHFT FSLH
                                  &lt MSK ESC    &mt LGUI ESC    &mt LCTRL TAB       &mt LALT RET    &lt NUM SPACE    &lt MSK BKSP
   &mkp RCLK   &mktg MB4   &mkp LCLK
                        >;
                };
                NUM_layer {
// +------------------------------------------------------+     +-------------------------------------------------------+
// |    1!    | LCTRL:2@  |    3#    | LALT:4$  |    5%   |     |    6^    |  RALT:7& |    8&    |  RCTRL 9( |    0)    |
// | SHFT `~  |           |    {[    |    ]}    |   TAB   |     |    LFT   |   DWN    |    UP    |    RGT    |  SHFT '" |
// | SHFT TAB |           |          |          |   RET   |     |   BKSP   |    -_    |    =+    |    SPC    |  SHFT \| |
//                        |          |          |         |     |   ^MSK   |    (H)   |          |
                        bindings = <
   &kp N1             &hm_l LCTRL N2   &kp N3     &hm_l LALT N4   &kp N5              &kp N6      &hm_r RALT N7   &kp N8      &hm_r RCTRL N9   &kp N0
   &mt LSHFT GRAVE    &trans           &kp LBKT   &kp RBKT        &kp TAB             &kp LEFT    &kp DOWN        &kp UP      &kp RIGHT        &mt RSHFT SQT
   &mt LSHFT TAB      &trans           &trans     &trans          &kp RET             &kp BKSP    &kp MINUS       &kp EQUAL   &kp SPACE        &mt RSHFT BSLH
                                       &trans     &trans          &trans              &tog MSK    &trans          &trans
   &trans   &trans   &trans
                        >;
                };
                MSK_layer {
// +------------------------------------------------------+     +------------------------------------------------------+
// |    F1    |    F2    |    F3    |    F4    |    F5    |     |    F6    |    F7    |    F8    |    F9    |   F10    |
// | _MSC:F12 |   VOLD   |   VOLU   |   BRID   |   BRIU   |     |   MLFT   |   MDWN   |    MUP   |   MRGT   | _MSC:F11 |
// |   ^MB4   |   RCLK   |   MCLK   |   LCLK   |   ^MSC   |     |   ^MSC   |   LCLK   |   MCLK   |   RCLK   |  ^MB4    |
//                       |   (H)    |          |          |     |   ^MSK   |          |    (H)   |
                        bindings = <
   &kp F1       &kp F2        &kp F3        &kp F4        &kp F5            &kp F6      &kp F7      &kp F8      &kp F9      &kp F10
   &lt MSC F12  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_DN  &kp C_BRI_UP      &mmv MOU_L  &mmv MOU_D  &mmv MOU_U  &mmv MOU_R  &lt MSC F11
   &mktg MB4    &mkp RCLK     &mkp MCLK     &mkp LCLK     &tog MSC          &tog MSC    &mkp LCLK   &mkp MCLK   &mkp RCLK   &mktg MB4
                              &trans        &trans        &trans            &tog MSK    &trans      &trans
   &trans   &trans   &trans
                        >;
                };
                MSC_layer {
// +------------------------------------------------------+     +------------------------------------------------------+
// |          |   BT_0   |   BT_1   |   BT_C   |   DFU    |     |    DFU   |   RESET  |          |          |          |
// |    (H)   |          |          |          |  RESET   |     |   SLFT   |   SDWN   |    SUP   |   SRGT   |   (H)    |
// |   ^MB4   |   RCLK   |   MCLK   |   LCLK   |   ^MSC   |     |   ^MSC   |   LCLK   |   MCLK   |   RCLK   |  ^MB4    |
//                       |          |          |  TEMPO   |     |   ^MSK   |          |          |
                        bindings = <
   &trans     &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_CLR    &bootloader       &bootloader   &sys_reset  &trans      &trans      &trans
   &trans     &trans        &trans        &trans        &sys_reset        &msc SCL_L    &msc SCL_D  &msc SCL_U  &msc SCL_R  &trans
   &mktg MB4  &mkp RCLK     &mkp MCLK     &mkp LCLK     &tog MSC          &tog MSC      &mkp LCLK   &mkp MCLK   &mkp RCLK   &mktg MB4
                            &trans        &trans        &tempo            &tog MSK      &trans      &trans
   &trans   &trans   &trans
                        >;
                };
       };
};
