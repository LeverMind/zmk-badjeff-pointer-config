/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define DEFAULT 0
#define RAISE   1

#define INPUT_EV_KEY 0x01               /**< Key event */
#define INPUT_EV_REL 0x02               /**< Relative coordinate event */
#define INPUT_EV_ABS 0x03               /**< Absolute coordinate event */
#define INPUT_EV_MSC 0x04               /**< Miscellaneous event */
#define INPUT_EV_VENDOR_START 0xf0      /**< Vendor specific event start */
#define INPUT_EV_VENDOR_STOP 0xff       /**< Vendor specific event stop */

#define INPUT_REL_X 0x00                /**< Relative X coordinate */
#define INPUT_REL_Y 0x01                /**< Relative Y coordinate */
#define INPUT_REL_WHEEL 0x08            /**< Relative wheel coordinate */
#define INPUT_REL_HWHEEL 0x06           /**< Relative horizontal wheel coordinate */
#define INPUT_REL_MISC 0x09             /**< Relative misc coordinate */

/ {
        tb0_mmv_ibl {
                compatible = "zmk,input-behavior-listener";
                device = <&pd0>;
                layers = <DEFAULT>;
		evt-type = <INPUT_EV_REL>;
		x-input-code = <INPUT_REL_X>;
		y-input-code = <INPUT_REL_Y>;
		scale-multiplier = <1>;
		scale-divisor = <1>;
                // bindings = <&ib_tog_layer RAISE>;
        };
        tb0_msl_ibl {
                compatible = "zmk,input-behavior-listener";
                device = <&pd0>;
                layers = <RAISE>;
                evt-type = <INPUT_EV_REL>;
                x-input-code = <INPUT_REL_MISC>;
                y-input-code = <INPUT_REL_WHEEL>;
                scale-multiplier = <1>;
                scale-divisor = <8>;
                y-invert;
        };
        ib_tog_layer: ib_tog_layer {
                compatible = "zmk,input-behavior-tog-layer";
                #binding-cells = <1>;
                time-to-live-ms = <1000>;
        };
        
	anin0_ibl {
		compatible = "zmk,input-behavior-listener";
		device = <&anin0>;
		layers = <DEFAULT>;
	};

        behaviors {
                // lar0_haptic: behavior_output_config_lar0_haptic {
                //         compatible = "zmk,behavior-output-config";
                //         #output-config-binding-cells = <0>; 
                //         device = <&lra0>;
                //         source = "layer-state-change";
                //         // source = "position-state-change";
                //         // source = "keycode-state-change";
                //         // source = "mouse-button-state-change";
                //         // source = "transport";
                // };

                // lar0_hid: behavior_output_config_lar0_transport {
                //         compatible = "zmk,behavior-output-config";
                //         #output-config-binding-cells = <0>; 
                //         device = <&lra0>;
                //         source = "transport";
                // };
        };

        keymap {
                compatible = "zmk,keymap";
                default_layer {
                        bindings = <
   &bt BT_CLR   &out OUT_TOG      &bt BT_CLR   &out OUT_TOG
   &mkp LCLK    &tog RAISE        &mkp LCLK    &tog RAISE
                        >;
                        // output-config-bindings = <&lar0_haptic &lar0_hid>;
                };
                raise_layer {
                        bindings = <
   &trans       &trans            &trans       &trans
   &trans       &trans            &trans       &trans
                        >;
                        // output-config-bindings = <&lar0_haptic &lar0_hid>;
                };
       };
};
