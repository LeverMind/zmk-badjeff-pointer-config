/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>

// #define ZMK_MOUSE_DEFAULT_MOVE_VAL 2000  // 600
// #define ZMK_MOUSE_DEFAULT_SCRL_VAL 10    // 10

// &mt {
//   tapping-term-ms = <250>;
//   flavor = "tap-preferred";
// };
// &sk {
//   release-after-ms = <2000>;
//   quick-release;
// };

/* Layers */
#define AL1 0
#define AL2 1
#define NM1 2
#define NV1 3
#define ME1 4
/ { 

  combos {
    compatible = "zmk,combos";

  //			00  01  02    03  04  05
  //	06  07  08  09    10  11  12  13
  //					14  15    16  17
    t {
      timeout-ms = <80>;
      key-positions = <1 2>;
      bindings = <&kp T>;
      layers = <AL1>;
    };
    q {
      timeout-ms = <80>;
      key-positions = <0 6>;
      bindings = <&kp Q>;
      layers = <AL1>;
    };
    g {
      timeout-ms = <80>;
      key-positions = <8 9>;
      bindings = <&kp G>;
      layers = <AL1>;
    };
    b {
      timeout-ms = <100>;
      key-positions = <1 9>;
      bindings = <&kp B>;
      layers = <AL1>;
    };

  //			00  01  02    03  04  05
  //	06  07  08  09    10  11  12  13
  //					14  15    16  17
    y {
      timeout-ms = <80>;
      key-positions = <3 4>;
      bindings = <&kp Y>;
      layers = <AL1>;
    };
    h {
      timeout-ms = <80>;
      key-positions = <10 11>;
      bindings = <&kp H>;
      layers = <AL1>;
    };
    p {
      timeout-ms = <80>;
      key-positions = <5 13>;
      bindings = <&kp P>;
      layers = <AL1>;
    };
    n {
      timeout-ms = <100>;
      key-positions = <10 4>;
      bindings = <&kp N>;
      layers = <AL1>;
    };

  //			00  01  02    03  04  05
  //	06  07  08  09    10  11  12  13
  //					14  15    16  17
    spc {
      timeout-ms = <50>;
      key-positions = <11 12>;
      bindings = <&kp SPC>;
      layers = <AL1 AL2>;
    };
    bksp {
      timeout-ms = <50>;
      key-positions = <4 5>;
      bindings = <&kp BKSP>;
      layers = <AL1 AL2>;
    };
    tab {
      timeout-ms = <50>;
      key-positions = <7 8>;
      bindings = <&kp TAB>;
      layers = <AL1 AL2>;
    };
    esc {
      timeout-ms = <50>;
      key-positions = <0 1>;
      bindings = <&kp ESC>;
      layers = <AL1 AL2>;
    };

  //			00  01  02    03  04  05
  //	06  07  08  09    10  11  12  13
  //					14  15    16  17
    combo_bt  {
      timeout-ms = <30>;
      key-positions = <10 12>;
      bindings = <&to ME1>;
      layers = <NM1>;
    };
  };

  behaviors {
    hm_l: homerow_mods_left {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS_L";
      #binding-cells = <2>;
      tapping-term-ms = <300>;
      quick-tap-ms = <250>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <3 4 5 10 11 12 13 14>; // right hand
    };
    hm_r: homerow_mods_right {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS_R";
      #binding-cells = <2>;
      tapping-term-ms = <300>;
      quick-tap-ms = <250>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
      hold-trigger-key-positions = <0 1 2 6 7 8 9>; // left hand
    };
    sr: shift_layer {
      compatible = "zmk,behavior-hold-tap";
      label = "SHIFT_LAYER";
      #binding-cells = <2>;
      tapping-term-ms = <300>;
      quick_tap_ms = <0>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&to>;
      retro-tap;
    };
    hl_l: homerow_layers_left {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_LAYERS_L";
      #binding-cells = <2>;
      tapping-term-ms = <220>;
      quick-tap-ms = <250>;
      flavor = "tap-preferred";
      bindings = <&mo>, <&kp>;
      hold-trigger-key-positions = <3 4 5 10 11 12 13 14>; // right hand
    };
    hl_r: homerow_layers_right {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_LAYERS_R";
      #binding-cells = <2>;
      tapping-term-ms = <220>;
      quick-tap-ms = <250>;
      flavor = "tap-preferred";
      bindings = <&mo>, <&kp>;
      hold-trigger-key-positions = <0 1 2 6 7 8 9>; // left hand
    };
    td: tapdance {
      compatible = "zmk,behavior-hold-tap";
      label = "TAPDANCE";
      #binding-cells = <2>;
      tapping-term-ms = <190>;
      quick-tap-ms = <250>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
  };

  keymap {
    compatible = "zmk,keymap";

    al1 {
      bindings = <
                 &hm_l LCTL W    &hm_l LALT E     &hm_l LGUI R           &hm_r RGUI U       &hm_r RALT I    &hm_r RCTL O
&mt LSHIFT A     &kp S           &hl_l NM1 D      &hl_l NV1 F            &hl_r NV1 J        &hl_r NM1 K     &kp L           &mt RSHIFT SEMI
                                 &mt LGUI ESC     &mt LCTRL TAB          &mt RALT ENTER     &lt AL2 SPACE
      >;
    };

    al2 {
      bindings = <
                 &kp Q       &kp LBKT     &kp RBKT          &kp SQT      &kp BKSP      &kp P
&mt LSHIFT Z	   &kp X       &kp C        &kp V             &kp M        &kp COMMA     &kp DOT     &mt RSHIFT FSLH
                             &trans       &trans            &trans       &trans	
      >;
    };

    nm1 {
      bindings = <
                     &kp N4      &kp N5       &kp N6            &kp N7       &kp N8        &kp N9
&mt LSHIFT GRAVE     &kp N1      &kp N2       &kp N3            &kp MINUS    &kp EQUAL     &kp BSLH     &mt RSHIFT N0
                                 &trans       &trans            &trans       &trans
      >;
    };

    nv1 {
      bindings = <
                 &mkp RCLK          &mmv MOVE_UP       &mkp LCLK               &kp HOME     &kp UP       &kp END
&td HOME DEL     &mmv MOVE_LEFT     &mmv MOVE_DOWN     &mmv MOVE_RIGHT         &kp LEFT     &kp DOWN     &kp RIGHT     &kp RSHIFT
                                    &trans             &trans                  &trans       &trans
      >;
    };

    me1 {
      bindings = <
                   &bt BT_SEL 0	     &bt BT_SEL 1	      &bt BT_CLR             &none          &kp C_VOL_DN     &kp C_VOL_UP
&none	             &none             &none              &bootloader            &bootloader    &kp C_BRI_DN     &kp C_BRI_UP     &none
                                     &to AL1            &none				           &none          &none
      >;
    };

  };
};
